Namaste React :- 

==> Ep - 01 :-

	-> React is most popular js library to build large scale application in this world.
	-> VS Code have a Emmet its basically generate code for you.
	-> React is developed by Meta developer.
	
	=> CDN : Content Delivery Network is a network of interconnected servers that speeds up webpage loading for data-heavy application.
	=> Crossorigin : Crossorigin attribute is used when a script on one domain is trying to fetch or interact with resources from another domain.

	-> in react React.createElement() takes 3 parameter - 1. Name of tag you create, 2. object, 3. child.
	-> in object parameter you can pass attribute like name of id or class of element you should created.
	-> in third parameter you can create a child element or siblings of child elements.
	-> Example : const heading = React.createElement('h1', {id: "heading", class: "heading"}, 'Hello from React');
	-> in react ReacrDOM.createRoot() to create root element.
	-> Example : const root = ReactDOM.createRoot(document.getElementById('root'))

==> Ep - 02 :-

	Npm : Node Package Manager (npmjs.com)
		-> Npm is work as a node package manager and it has package manager.
		-> Npm is a standard repositiry it has all the packages.
		-> Any pacakge you will use in our project you will used npm.
		-> Npm has all the packages, all the utilities.
		=> package.json - is configuration of npm.
		-> package.json file keep the track version of pacakge which is installed.
		=> package.lock.json - file keep the track of exact version of package which is installed.
		=> node_modules - node_modules contains all the code that be fetch from npm.
		-> node_modules contains all data to project or dependnucy need.
		-> Our project depend on some package and package depend on some dependuncy & npm is manage all pacakge & dependuncy.
		-> When are two types of dependuncy in our app 1. dev dependuncy and 2. normal dependuncy
			1. dev dependuncy - it is generally required for in development phase
			2. normal dependnucy - it is used in production also
		=> Caret sign (^) : to put ^ sign below the version of package this sign automatically upgrade package version.
		=> Tilde sign (~) : to put ~ sign below the version of pacakge this sign install the major version of package.
		=> Transitive dependuncy - one dependnucy they have own dependnucy they have own dependnucy...
-------------------------------------------------------------------------------------------------------------------------------------------------
API : API stand for Application Programing Interface.
	React used to call api.
	api must be create inside a json.
	json file axtension .json.
	
	example: 
		const user = 
			[
				{
					"id":101,
					"name":"bhargav",
				}
			]

	json-server install cmd : npm i -g json-server
	json-server run cmd : npm run json-server
	packge.json file : "json-server": "json-server --watch db.json --port=8000"

-------------------------------------------------------------------------------------------------------------------------------------------------

OBJECT : object is entity used to stored a data inside of {"property":"value"}
	object will b declare or assign 3 types
	1. object as literals
	=> Example,  const emp = '{"name":"bhargav"}'
			console.log(emp)
	2. object as New keyword
	=> Example, const emp = new Object()
			const res = {"name":"bhargav"}
			console.log(res)
	3. object declared as constructor this keyword
	=> Example, function emp(id,name,age){
   				 this.id = 1001,
    				this.name = "bhargav",
    				this.age = 20
 			 }
  			const emp1 = new emp(1001,"bhargav",20);
  			console.log(emp1)
